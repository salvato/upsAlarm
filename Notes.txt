$ sudo nano /lib/systemd/system/upsAlarm.service


[Unit]
Description=UPS Temperature Alarm System
After= graphical.target network-online.target

[Service]
ExecStart=/home/pi/upsAlarm
User=pi
Restart=always
RestartSec=60s
KillMode=process
TimeoutSec=infinity

[Install]
WantedBy=multi-user.target


$ sudo systemctl daemon-reload
$ sudo systemctl restart upsAlarm.service
$ sudo systemctl status upsAlarm.service
$ sudo systemctl enable upsAlarm.service


To check:
you should not put the executable in your home folder.
Instead, put it under /etc/systemd/system/



/*This is the sample program to notify us for
  the file creation and file deletion takes place
  in “/tmp” directory
 */
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <sys/types.h>
#include <linux/inotify.h>

#define EVENT_SIZE  ( sizeof (struct inotify_event) )
#define EVENT_BUF_LEN     ( 1024 * ( EVENT_SIZE + 16 ) )

int main( )
{
  int length, i = 0;
  int fd;
  int wd;
  char buffer[EVENT_BUF_LEN];

  /*creating the INOTIFY instance*/
  fd = inotify_init();

  /*checking for error*/
  if ( fd < 0 ) {
    perror( "inotify_init" );
  }

  /*adding the “/tmp” directory into watch list. Here, the suggestion is to validate the existence of the directory before adding into monitoring list.*/
  wd = inotify_add_watch( fd, "/tmp", IN_CREATE | IN_DELETE );

  /*read to determine the event change happens on “/tmp” directory. Actually this read blocks until the change event occurs*/

  length = read( fd, buffer, EVENT_BUF_LEN );

  /*checking for error*/
  if ( length < 0 ) {
    perror( "read" );
  }

  /*actually read return the list of change events happens. Here, read the change event one by one and process it accordingly.*/
  while ( i < length ) {     struct inotify_event *event = ( struct inotify_event * ) &buffer[ i ];     if ( event->len ) {
      if ( event->mask & IN_CREATE ) {
        if ( event->mask & IN_ISDIR ) {
          printf( "New directory %s created.\n", event->name );
        }
        else {
          printf( "New file %s created.\n", event->name );
        }
      }
      else if ( event->mask & IN_DELETE ) {
        if ( event->mask & IN_ISDIR ) {
          printf( "Directory %s deleted.\n", event->name );
        }
        else {
          printf( "File %s deleted.\n", event->name );
        }
      }
    }
    i += EVENT_SIZE + event->len;
  }
  /*removing the “/tmp” directory from the watch list.*/
   inotify_rm_watch( fd, wd );

  /*closing the INOTIFY instance*/
   close( fd );

}


$ sudo openssl genrsa -out ca.key 2048
$ sudo openssl req -nodes -new -key ca.key -out ca.csr
$ sudo openssl x509 -req -days 825 -in ca.csr -signkey ca.key -out ca.crt
$ sudo mkdir /etc/apache2/ssl
$ sudo cp ca.crt ca.key ca.csr /etc/apache2/ssl/
$ sudo a2enmod ssl
$ sudo systemctl restart apache2.service
$ sudo nano /etc/apache2/sites-enabled/000-default.conf

Comment all the content (adding # as the first row character)
and insert the following text:

<VirtualHost *:80>
                ServerName raspberrypi.local
                Redirect permanent / https://raspberrypi.local/
</VirtualHost>

<VirtualHost *:443>
                ServerName www.raspberrypi.local
                ServerAlias *.raspberypi.* raspberrypi.*
                ServerAdmin webmaster@localhost
                DocumentRoot /var/www/html
                RewriteEngine On
                RewriteCond %{HTTPS} !=on
                RewriteCond %{HTTP_HOST} !^(localhost|127.0.0.1)
                RewriteRule ^/(.*) https://raspberrypi.local/$1 [R,L]
                ErrorLog ${APACHE_LOG_DIR}/error.log
                CustomLog ${APACHE_LOG_DIR}/access.log combined
                SSLEngine on
                SSLCertificateFile /etc/apache2/ssl/ca.crt
                SSLCertificateKeyFile /etc/apache2/ssl/ca.key
</VirtualHost>

$ sudo a2enmod rewrite
$ sudo systemctl restart apache2.service
